#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.26
#  in conjunction with Tcl version 8.6
#    Jan 01, 2020 05:25:12 AM PST  platform: Windows NT
import sys
import RestaurantManagement
import mysql.connector

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk
try:
    import ttk

    py3 = False
except ImportError:
    import tkinter.ttk as ttk

    py3 = True
import ShowRecord_support





def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    top = ShowTopLevel(root)
    ShowRecord_support.init(root, top)
    root.mainloop()


w = None


def create_ShowTopLevel(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = tk.Toplevel(root)
    top = ShowTopLevel(w)
    ShowRecord_support.init(w, top, *args, **kwargs)
    return (w, top)


def destroy_ShowTopLevel():
    global w
    w.destroy()
    w = None


class ShowTopLevel(tk.Frame):
    def showButtonAction(self):
        try:
            self.ShowListBox.delete(0, "end")
            insQuery = "select * from {}".format(self.ShowTEntry.get())
            self.mycursor.execute(insQuery)
            j = 0
            for i in self.mycursor.fetchall():
                self.ShowListBox.insert(j, i)
                j = j + 1
        except Exception:
            self.ShowListBox.insert(0, "There is no table named {}".format(self.ShowTEntry.get()))

    def __init__(self, top=None):
        with open('database.config', 'r+') as reader:
            line = reader.readline()
            databasename = line.split("\n")[0]
            line = reader.readline()
            username = line.split("\n")[0]
            line = reader.readline()
            password = line.split("\n")[0]

        try:
            self.cnx = mysql.connector.connect(user=username, password=password,
                                               host="localhost", database=databasename)
            self.mycursor = self.cnx.cursor()
        except Exception:
            print(Exception)
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9'  # X11 color: 'gray85'
        _ana1color = '#d9d9d9'  # X11 color: 'gray85'
        _ana2color = '#ececec'  # Closest X11 color: 'gray92'
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.', background=_bgcolor)
        self.style.configure('.', foreground=_fgcolor)
        self.style.configure('.', font="TkDefaultFont")
        self.style.map('.', background=
        [('selected', _compcolor), ('active', _ana2color)])

        top.geometry("600x450+328+119")
        top.minsize(120, 1)
        top.maxsize(1370, 749)
        top.resizable(1, 1)
        top.title("Show Record")
        top.configure(background="#d9d9d9")

        self.ShowListBox = tk.Listbox(top)
        self.ShowListBox.place(relx=0.15, rely=0.444, relheight=0.36
                               , relwidth=0.723)
        self.ShowListBox.configure(background="white")
        self.ShowListBox.configure(disabledforeground="#a3a3a3")
        self.ShowListBox.configure(font="TkFixedFont")
        self.ShowListBox.configure(foreground="#000000")

        self.ShowTEntry = ttk.Entry(top)
        self.ShowTEntry.place(relx=0.517, rely=0.2, relheight=0.069
                              , relwidth=0.26)
        self.ShowTEntry.configure(takefocus="")
        self.ShowTEntry.configure(cursor="ibeam")

        self.ShowLabel = tk.Label(top)
        self.ShowLabel.place(relx=0.1, rely=0.2, height=41, width=174)
        self.ShowLabel.configure(background="#d9d9d9")
        self.ShowLabel.configure(disabledforeground="#a3a3a3")
        self.ShowLabel.configure(foreground="#000000")
        self.ShowLabel.configure(text='''Please Enter Table Name:''')

        self.ShowButton = tk.Button(top)
        self.ShowButton.place(relx=0.567, rely=0.333, height=34, width=87)
        self.ShowButton.configure(activebackground="#ececec")
        self.ShowButton.configure(activeforeground="#000000")
        self.ShowButton.configure(background="#d9d9d9")
        self.ShowButton.configure(disabledforeground="#a3a3a3")
        self.ShowButton.configure(foreground="#000000")
        self.ShowButton.configure(highlightbackground="#d9d9d9")
        self.ShowButton.configure(highlightcolor="black")
        self.ShowButton.configure(pady="0")
        self.ShowButton.configure(text='''Show''')
        self.ShowButton.configure(command=self.showButtonAction)


if __name__ == '__main__':
    vp_start_gui()
